<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fengchao.miniapp.mapper.AliPayConfigMapper">
  <resultMap id="BaseResultMap" type="com.fengchao.miniapp.model.AliPayConfig">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="i_app_id" jdbcType="VARCHAR" property="iAppId" />
    <result column="pay_app_id" jdbcType="VARCHAR" property="payAppId" />
    <result column="pay_notify" jdbcType="VARCHAR" property="payNotify" />
    <result column="refund_notify" jdbcType="VARCHAR" property="refundNotify" />
    <result column="api_url" jdbcType="VARCHAR" property="apiUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="comments" jdbcType="VARCHAR" property="comments" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, i_app_id, pay_app_id, pay_notify, refund_notify, api_url, create_time, update_time, 
    comments
  </sql>
  <select id="selectByExample" parameterType="com.fengchao.miniapp.model.AliPayConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'id' as QUERYID,
    <include refid="Base_Column_List" />
    from ali_pay_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ali_pay_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ali_pay_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fengchao.miniapp.model.AliPayConfigExample">
    delete from ali_pay_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fengchao.miniapp.model.AliPayConfig">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ali_pay_config (i_app_id, pay_app_id, pay_notify, 
      refund_notify, api_url, create_time, 
      update_time, comments)
    values (#{iAppId,jdbcType=VARCHAR}, #{payAppId,jdbcType=VARCHAR}, #{payNotify,jdbcType=VARCHAR}, 
      #{refundNotify,jdbcType=VARCHAR}, #{apiUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{comments,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fengchao.miniapp.model.AliPayConfig">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ali_pay_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="iAppId != null">
        i_app_id,
      </if>
      <if test="payAppId != null">
        pay_app_id,
      </if>
      <if test="payNotify != null">
        pay_notify,
      </if>
      <if test="refundNotify != null">
        refund_notify,
      </if>
      <if test="apiUrl != null">
        api_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="comments != null">
        comments,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="iAppId != null">
        #{iAppId,jdbcType=VARCHAR},
      </if>
      <if test="payAppId != null">
        #{payAppId,jdbcType=VARCHAR},
      </if>
      <if test="payNotify != null">
        #{payNotify,jdbcType=VARCHAR},
      </if>
      <if test="refundNotify != null">
        #{refundNotify,jdbcType=VARCHAR},
      </if>
      <if test="apiUrl != null">
        #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fengchao.miniapp.model.AliPayConfigExample" resultType="java.lang.Long">
    select count(*) from ali_pay_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ali_pay_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.iAppId != null">
        i_app_id = #{record.iAppId,jdbcType=VARCHAR},
      </if>
      <if test="record.payAppId != null">
        pay_app_id = #{record.payAppId,jdbcType=VARCHAR},
      </if>
      <if test="record.payNotify != null">
        pay_notify = #{record.payNotify,jdbcType=VARCHAR},
      </if>
      <if test="record.refundNotify != null">
        refund_notify = #{record.refundNotify,jdbcType=VARCHAR},
      </if>
      <if test="record.apiUrl != null">
        api_url = #{record.apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ali_pay_config
    set id = #{record.id,jdbcType=INTEGER},
      i_app_id = #{record.iAppId,jdbcType=VARCHAR},
      pay_app_id = #{record.payAppId,jdbcType=VARCHAR},
      pay_notify = #{record.payNotify,jdbcType=VARCHAR},
      refund_notify = #{record.refundNotify,jdbcType=VARCHAR},
      api_url = #{record.apiUrl,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      comments = #{record.comments,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fengchao.miniapp.model.AliPayConfig">
    update ali_pay_config
    <set>
      <if test="iAppId != null">
        i_app_id = #{iAppId,jdbcType=VARCHAR},
      </if>
      <if test="payAppId != null">
        pay_app_id = #{payAppId,jdbcType=VARCHAR},
      </if>
      <if test="payNotify != null">
        pay_notify = #{payNotify,jdbcType=VARCHAR},
      </if>
      <if test="refundNotify != null">
        refund_notify = #{refundNotify,jdbcType=VARCHAR},
      </if>
      <if test="apiUrl != null">
        api_url = #{apiUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fengchao.miniapp.model.AliPayConfig">
    update ali_pay_config
    set i_app_id = #{iAppId,jdbcType=VARCHAR},
      pay_app_id = #{payAppId,jdbcType=VARCHAR},
      pay_notify = #{payNotify,jdbcType=VARCHAR},
      refund_notify = #{refundNotify,jdbcType=VARCHAR},
      api_url = #{apiUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      comments = #{comments,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>